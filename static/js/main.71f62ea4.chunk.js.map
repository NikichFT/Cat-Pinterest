{"version":3,"sources":["components/Navbar/NavbarButton/NavbarButton.js","components/Navbar/Navbar.js","components/Header/Header.js","components/Post/LikeButton/LikeButton.js","components/Post/Post.js","components/Posts/Posts.js","components/PostsAll/PostsAll.js","components/PostsLiked/PostsLiked.js","service/FetchCats.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["NavbarButton","textButton","link","className","to","activeStyle","color","background","Navbar","Header","LikeButton","catPost","likeCat","unlikeCat","likeButton","onClick","Post","likePost","unlikePost","catLikedPosts","catPosts","useState","setLikeButton","useEffect","forEach","cat","image_id","id","console","log","like","style","backgroundImage","url","image","Posts","map","PostAll","PostsLiked","length","alt","src","fetchCats","config","getCatList","fetch","_url","headers","_key","then","_checkResult","getSavedCat","catId","method","body","JSON","stringify","this","_headers","key","res","ok","json","Promise","reject","status","App","setCatPosts","setCatLikedPosts","catch","err","getSavedCatList","localStorage","setItem","parse","getItem","postId","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71f62ea4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavbarButton.scss';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nfunction NavbarButton({textButton, link}){\r\n  return(\r\n    <NavLink className=\"nav__item\" to={link} activeStyle= {{color: '#FFFFFF', background: ' #21cc99'}}>\r\n        {textButton}\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default NavbarButton;","import React from 'react';\r\nimport './Navbar.scss';\r\n\r\nimport NavbarButton from './NavbarButton/NavbarButton';\r\n\r\nfunction Navbar(){\r\n  return(\r\n    <nav className=\"nav\">\r\n        <NavbarButton link='/all-posts' textButton=\"Все котики\"/>\r\n        <NavbarButton link='/liked-posts' textButton=\"Любимые котики\"/>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport './Header.scss';\r\nimport Navbar from '../Navbar/Navbar'\r\n\r\nfunction Header(){\r\n  return(\r\n    <header className=\"header\">\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './LikeButton.scss';\r\n\r\nfunction LikeButton ({catPost, likeCat, unlikeCat, likeButton}) {\r\n\r\n    const handleClick = () =>{\r\n        if (likeButton) {\r\n            unlikeCat()\r\n\r\n        } else {\r\n            likeCat()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <button \r\n            className={`like-button ${likeButton ? '_liked' : ''} `}\r\n            onClick={handleClick}\r\n        ></button>\r\n    )\r\n}\r\n\r\nexport default LikeButton;","import React, { useEffect, useState } from 'react';\r\nimport LikeButton from './LikeButton/LikeButton';\r\nimport './Post.scss';\r\n\r\nfunction Post({ catPost, likePost, unlikePost, catLikedPosts, catPosts }) {\r\n\r\n    const [likeButton, setLikeButton] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        catLikedPosts.forEach((cat) => {\r\n            if (cat.image_id === catPost.id) {\r\n                catPost.id = cat.id\r\n                console.log(cat.id)\r\n            }\r\n        })\r\n    }, [catLikedPosts])\r\n\r\n    useEffect(() => {\r\n        if (catPost.image_id) {\r\n            setLikeButton(true)\r\n        }\r\n        if (catPost.like) {\r\n            setLikeButton(true)\r\n        }\r\n    }, [])\r\n\r\n    const likeCat = () => {\r\n        catPost.like = true\r\n        setLikeButton(true)\r\n        likePost(catPost.id)\r\n        console.log('catpost', catPost)\r\n    }\r\n\r\n    const unlikeCat = () => {\r\n        catPost.like = false\r\n        setLikeButton(false)\r\n        unlikePost(catPost.id)\r\n        if (!catPost.image_id){\r\n            catLikedPosts.forEach((cat) => {\r\n                if (cat.id === catPost.id) {\r\n                    catPost.id = cat.image_id\r\n                }\r\n            })\r\n        } else {\r\n            catPosts.forEach((cat) => {\r\n                if (cat.id === catPost.id) {\r\n                    cat.like = false\r\n                    cat.id = catPost.image_id\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <li className = \"post\"\r\n        style = {\r\n            { backgroundImage: `url(${catPost.url || catPost.image.url})` }\r\n        }>\r\n            <LikeButton likeButton = { likeButton }\r\n            catPost = { catPost }\r\n            likeCat = { likeCat }\r\n            unlikeCat = { unlikeCat }\r\n            likePost = { likePost }\r\n            />\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './Posts.scss'\r\n\r\nimport Post from '../Post/Post';\r\n\r\nconst Posts = ({ catPosts, likePost, unlikePost, catLikedPosts }) => {\r\n        return ( <\r\n                ul className = \"posts-grid\" > {\r\n                    catPosts.map((catPost) => < Post unlikePost = { unlikePost }\r\n                        key = { catPost.id }\r\n                        catPost = { catPost }\r\n                        catLikedPosts = { catLikedPosts }\r\n                        likePost = { likePost }\r\n                        catPosts = {catPosts}\r\n                        />)} <\r\n                        /ul> \r\n                    )\r\n                }\r\n\r\n                export default Posts;","import React from 'react';\r\nimport './PostsAll.scss';\r\n\r\nimport Posts from '../Posts/Posts'\r\n\r\nfunction PostAll({ catPosts, likePost, unlikePost, catLikedPosts }) {\r\n    return ( <\r\n        Posts unlikePost = { unlikePost }\r\n        likePost = { likePost }\r\n        catPosts = { catPosts }\r\n        catLikedPosts = { catLikedPosts }\r\n        />\r\n    )\r\n}\r\n\r\nexport default PostAll;","import React from 'react';\r\nimport './PostsLiked.scss';\r\n\r\nimport Post from '../Post/Post'\r\n\r\nfunction PostsLiked({catLikedPosts, unlikePost, likePost, catPosts}){\r\n  \r\n  return(\r\n    (catLikedPosts.length === 0) ? <div className=\"no-cats\">\r\n      <img className=\"no-cats-img\" alt=\"\" src=\"https://www.tynker.com/projects/images/5c00182b4b12d530fa6dc8d9/no-toche---5845e10e7733c3558233c0ea.png\"></img>\r\n      <div className=\"no-cats-title\">Пока нет любимых котиков</div>\r\n      </div> : (\r\n      <ul className=\"posts-grid\">\r\n        {catLikedPosts.map((catPost)=><Post likePost={likePost} unlikePost={unlikePost} catPosts={catPosts} catLikedPosts={catLikedPosts} key={catPost.id} catPost={catPost}/>)}\r\n      </ul>)\r\n  )\r\n}\r\n\r\nexport default PostsLiked;","export class FetchCats {\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n        this._key = config.key\r\n    }\r\n\r\n    _checkResult(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n    getCatList = () => {\r\n        return fetch(`${this._url}/images/search?limit=10&_page=10`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': this._key\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    getSavedCat = () => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': this._key\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    likeCat = (catId) => {\r\n        return fetch(`${this._url}/favourites`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': this._key\r\n            },\r\n            body: JSON.stringify({\r\n                image_id: catId\r\n            })\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n    unlikeCat = (catId) => {\r\n        return fetch(`${this._url}/favourites/${catId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-api-key': this._key\r\n            }\r\n        })\r\n            .then(this._checkResult)\r\n    }\r\n\r\n\r\n}\r\n\r\nconst fetchCats = new FetchCats({\r\n    url: 'https://api.thecatapi.com/v1',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'x-api-key': '30271cfe-da2e-4b5c-bde0-32813f78a055'\r\n    },\r\n    key: '30271cfe-da2e-4b5c-bde0-32813f78a055'\r\n})\r\n\r\nexport default fetchCats","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.scss';\n\nimport Header from '../Header/Header';\nimport PostsAll from '../PostsAll/PostsAll'\nimport PostsLiked from '../PostsLiked/PostsLiked';\nimport fetchCats from '../../service/FetchCats';\n\n\nfunction App() {\n\n    const [catPosts, setCatPosts] = useState([])\n    const [catLikedPosts, setCatLikedPosts] = useState([])\n\n    useEffect(() => {\n        fetchCats.getCatList()\n            .then((res) => {\n                setCatPosts([...catPosts, ...res])\n\n                // setCountPage(count => count + 1)\n            })\n            .catch(err => console.log(err))\n            // .finally(() => setIsFitching(false))\n\n    }, [])\n    console.log(catPosts)\n\n    useEffect(() => {\n        fetchCats.getSavedCat()\n            .then((res) => {\n                setCatLikedPosts(res)\n                console.log('likedCat', res)\n            })\n            .catch(err => console.log(err))\n    }, []);\n    console.log('LikedcatPosts', catLikedPosts.length === 0)\n\n    const getSavedCatList = () => {\n        fetchCats.getSavedCat()\n            .then((res) => {\n                localStorage.setItem('likedPosts', JSON.stringify(res))\n                setCatLikedPosts(JSON.parse(localStorage.getItem('likedPosts')))\n                console.log('likedCats', res)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    const likePost = (postId) => {\n        fetchCats.likeCat(postId)\n            .then(() => {\n                getSavedCatList()\n            })\n    }\n\n    const unlikePost = (postId) => {\n        fetchCats.unlikeCat(postId)\n            .then(() => {\n                getSavedCatList()\n            })\n    }\n\n\n    return ( \n        <div className = \"App\" >\n            <Header/>\n            <Switch >\n                <Route path = \"/all-posts\" >\n                    <PostsAll unlikePost = { unlikePost }\n                    likePost = { likePost }\n                    catPosts = { catPosts }\n                    catLikedPosts = { catLikedPosts }/>\n                </Route > \n                    <Route path = \"/liked-posts\" >\n                    <PostsLiked unlikePost = { unlikePost }\n                    likePost = { likePost } \n                    catPosts = {catPosts}\n                    catLikedPosts = { catLikedPosts }/> \n                </Route > \n            </Switch> \n        </div >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}